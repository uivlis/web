# Generated by Django 2.1.4 on 2018-12-26 17:16

import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import economy.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('dashboard', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AccountDeletionRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(db_index=True, default=economy.models.get_time)),
                ('modified_on', models.DateTimeField(default=economy.models.get_time)),
                ('handle', models.CharField(db_index=True, max_length=255)),
                ('profile', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=dict)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Alumni',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(db_index=True, default=economy.models.get_time)),
                ('modified_on', models.DateTimeField(default=economy.models.get_time)),
                ('organization', models.CharField(blank=True, db_index=True, max_length=255)),
                ('comments', models.TextField(blank=True, max_length=5000)),
                ('public', models.BooleanField(default=True)),
                ('profile', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='alumni', to='dashboard.Profile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EmailEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(db_index=True, default=economy.models.get_time)),
                ('modified_on', models.DateTimeField(default=economy.models.get_time)),
                ('email', models.EmailField(db_index=True, max_length=255)),
                ('event', models.CharField(db_index=True, max_length=255)),
                ('category', models.CharField(blank=True, db_index=True, default='', max_length=255)),
                ('ip_address', models.GenericIPAddressField(default=None, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EmailSubscriber',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(db_index=True, default=economy.models.get_time)),
                ('modified_on', models.DateTimeField(default=economy.models.get_time)),
                ('email', models.EmailField(max_length=255)),
                ('source', models.CharField(max_length=50)),
                ('active', models.BooleanField(default=True)),
                ('newsletter', models.BooleanField(default=True)),
                ('preferences', django.contrib.postgres.fields.jsonb.JSONField(default=dict)),
                ('metadata', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=dict)),
                ('priv', models.CharField(default='', max_length=30)),
                ('github', models.CharField(blank=True, default='', max_length=255)),
                ('keywords', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=200), blank=True, default=list, size=None)),
                ('form_submission_records', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=list)),
                ('profile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='email_subscriptions', to='dashboard.Profile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EmailSupressionList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(db_index=True, default=economy.models.get_time)),
                ('modified_on', models.DateTimeField(default=economy.models.get_time)),
                ('email', models.EmailField(max_length=255)),
                ('metadata', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=dict)),
                ('comments', models.TextField(blank=True, max_length=5000)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GithubEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(db_index=True, default=economy.models.get_time)),
                ('modified_on', models.DateTimeField(default=economy.models.get_time)),
                ('what', models.CharField(blank=True, default='', max_length=500)),
                ('repo', models.CharField(blank=True, default='', max_length=500)),
                ('payload', django.contrib.postgres.fields.jsonb.JSONField(default=dict)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='github_events', to='dashboard.Profile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GithubOrgToTwitterHandleMapping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(db_index=True, default=economy.models.get_time)),
                ('modified_on', models.DateTimeField(default=economy.models.get_time)),
                ('github_orgname', models.CharField(max_length=500)),
                ('twitter_handle', models.CharField(max_length=500)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Keyword',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(db_index=True, default=economy.models.get_time)),
                ('modified_on', models.DateTimeField(default=economy.models.get_time)),
                ('keyword', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LeaderboardRank',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(db_index=True, default=economy.models.get_time)),
                ('modified_on', models.DateTimeField(default=economy.models.get_time)),
                ('github_username', models.CharField(max_length=255)),
                ('leaderboard', models.CharField(max_length=255)),
                ('amount', models.FloatField()),
                ('active', models.BooleanField()),
                ('count', models.IntegerField(default=0)),
                ('rank', models.IntegerField(default=0)),
                ('tech_keywords', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50), blank=True, default=list, size=None)),
                ('profile', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='leaderboard_ranks', to='dashboard.Profile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(db_index=True, default=economy.models.get_time)),
                ('modified_on', models.DateTimeField(default=economy.models.get_time)),
                ('email', models.EmailField(max_length=255)),
                ('direction', models.CharField(max_length=50)),
                ('github_username', models.CharField(max_length=255)),
                ('bounty', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.Bounty')),
            ],
            options={
                'verbose_name_plural': 'Matches',
            },
        ),
        migrations.CreateModel(
            name='SlackPresence',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(db_index=True, default=economy.models.get_time)),
                ('modified_on', models.DateTimeField(default=economy.models.get_time)),
                ('status', models.CharField(max_length=50)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SlackUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(db_index=True, default=economy.models.get_time)),
                ('modified_on', models.DateTimeField(default=economy.models.get_time)),
                ('username', models.CharField(max_length=500)),
                ('email', models.EmailField(max_length=255)),
                ('last_seen', models.DateTimeField(null=True)),
                ('last_unseen', models.DateTimeField(null=True)),
                ('profile', django.contrib.postgres.fields.jsonb.JSONField(default=dict)),
                ('times_seen', models.IntegerField(default=0)),
                ('times_unseen', models.IntegerField(default=0)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Stat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(db_index=True, default=economy.models.get_time)),
                ('modified_on', models.DateTimeField(default=economy.models.get_time)),
                ('key', models.CharField(db_index=True, max_length=50)),
                ('val', models.IntegerField()),
            ],
        ),
        migrations.AlterIndexTogether(
            name='stat',
            index_together={('created_on', 'key')},
        ),
        migrations.AddField(
            model_name='slackpresence',
            name='slackuser',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='presences', to='marketing.SlackUser'),
        ),
    ]
